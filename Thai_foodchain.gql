GRAPH.QUERY foodchain "Create (x:Animal {name:'Tiger'}) SET x.id = ID(x)"
GRAPH.QUERY foodchain "Create (x:Animal {name:'Leopard'}) SET x.id = ID(x)"

GRAPH.QUERY foodchain "Create (x:Animal {name:'Dhole'}) SET x.id = ID(x)"
GRAPH.QUERY foodchain "Create (x:Animal {name:'Jackal'}) SET x.id = ID(x)"

GRAPH.QUERY foodchain "Create (x:Animal {name:'Elephant'}) SET x.id = ID(x)"
GRAPH.QUERY foodchain "Create (x:Animal {name:'Gaur'}) SET x.id = ID(x)"
GRAPH.QUERY foodchain "Create (x:Animal {name:'Deer'}) SET x.id = ID(x)"
GRAPH.QUERY foodchain "Create (x:Animal {name:'Macaque'}) SET x.id = ID(x)"
GRAPH.QUERY foodchain "Create (x:Animal {name:'Tapir'}) SET x.id = ID(x)"
GRAPH.QUERY foodchain "Create (x:Animal {name:'Pangolin'}) SET x.id = ID(x)"
GRAPH.QUERY foodchain "Create (x:Animal {name:'Weasel'}) SET x.id = ID(x)"
GRAPH.QUERY foodchain "Create (x:Animal {name:'Monitor'}) SET x.id = ID(x)"

GRAPH.QUERY foodchain "Create (x:Animal {name:'Treeshrew'}) SET x.id = ID(x)"
GRAPH.QUERY foodchain "Create (x:Animal {name:'Frog'}) SET x.id = ID(x)"

GRAPH.QUERY foodchain "Create (x:Plant {name:'Grass'}) SET x.id = ID(x)"
GRAPH.QUERY foodchain "Create (x:Insect {name:'Ant'}) SET x.id = ID(x)"
GRAPH.QUERY foodchain "Create (x:Insect {name:'Butterfly'}) SET x.id = ID(x)"


GRAPH.QUERY foodchain "MATCH (n{name:'Tiger'}),(m{name:'Gaur'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Tiger'}),(m{name:'Deer'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Tiger'}),(m{name:'Macaque'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Tiger'}),(m{name:'Tapir'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Tiger'}),(m{name:'Leopard'}) Create (n)-[:Eat]->(m)"

GRAPH.QUERY foodchain "MATCH (n{name:'Leopard'}),(m{name:'Deer'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Leopard'}),(m{name:'Macaque'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Leopard'}),(m{name:'Tapir'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Leopard'}),(m{name:'Dhole'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Leopard'}),(m{name:'Jackal'}) Create (n)-[:Eat]->(m)"

GRAPH.QUERY foodchain "MATCH (n{name:'Dhole'}),(m{name:'Deer'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Dhole'}),(m{name:'Macaque'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Dhole'}),(m{name:'Tapir'}) Create (n)-[:Eat]->(m)"

GRAPH.QUERY foodchain "MATCH (n{name:'Jackal'}),(m{name:'Macaque'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Jackal'}),(m{name:'Tapir'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Jackal'}),(m{name:'Treeshrew'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Jackal'}),(m{name:'Weasel'}) Create (n)-[:Eat]->(m)"

GRAPH.QUERY foodchain "MATCH (n{name:'Elephant'}),(m{name:'Grass'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Gaur'}),(m{name:'Grass'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Deer'}),(m{name:'Grass'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Macaque'}),(m{name:'Grass'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Tapir'}),(m{name:'Grass'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Tapir'}),(m{name:'Ant'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Pangolin'}),(m{name:'Ant'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Weasel'}),(m{name:'Treeshrew'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Weasel'}),(m{name:'Frog'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Monitor'}),(m{name:'Treeshrew'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Monitor'}),(m{name:'Frog'}) Create (n)-[:Eat]->(m)"

GRAPH.QUERY foodchain "MATCH (n{name:'Treeshrew'}),(m{name:'Grass'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Treeshrew'}),(m{name:'Ant'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Treeshrew'}),(m{name:'Butterfly'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Frog'}),(m{name:'Ant'}) Create (n)-[:Eat]->(m)"
GRAPH.QUERY foodchain "MATCH (n{name:'Frog'}),(m{name:'Butterfly'}) Create (n)-[:Eat]->(m)"
